# Import packages
import numpy as np
import pandas as pd
from statsmodels.stats.proportion import proportions_ztest
import pingouin
import seaborn as sns
import matplotlib.pyplot as plt

# Load the dataset
df = pd.read_csv("drug_safety.csv")
print(df.info())
df.head()

# Distribution of Gender and Tests
print(df['sex'].value_counts(normalize= True))
print(df['trx'].value_counts(normalize= True))
print(f"From the table above, It can deduced that the experiment conducted involved 16103 individuals,
Of which 77% were males and 23% were females. And 33% were placebo tests and 67% were real drug observations")

# Distribution of ages of participants
# Create a histogram with Seaborn
sns.histplot(data=df, x="age", hue="trx")
plt.title("Distribution of Ages of Participants")
plt.ylabel("Frequency")
plt.show()
print(f"From the figure, It can be observed that the participants in the test were between the ages of 40 - 80 years, 
with most of the participants been between the ages of 60-70 years")

# Compute adverse reactions by Test Group
adv_eff_by_trx = df.groupby("trx").adverse_effects.value_counts()
print(adv_eff_by_trx)

# Compute total rows in each group
adv_eff_by_trx_totals = adv_eff_by_trx.groupby("trx").sum()
print(adv_eff_by_trx_totals)

# Create an array of the "Yes" counts for each group
yeses = [adv_eff_by_trx["Drug"]["Yes"], adv_eff_by_trx["Placebo"]["Yes"]]

# Create an array of the total number of rows in each group
n = [adv_eff_by_trx_totals["Drug"], adv_eff_by_trx_totals["Placebo"]]

# Perform a two-sided z-test on the two proportions
two_sample_results = proportions_ztest(yeses, n)

# Store the p-value
two_sample_p_value = two_sample_results[1]

# Determine if num_effects and trx are independent
num_effects_groups = pingouin.chi2_independence(
    data=df, x="num_effects", y="trx")

# Extract the p-value
num_effects_p_value = num_effects_groups[2]["pval"][0]

# Create a histogram with Seaborn
# sns.histplot(data=df, x="age", hue="trx")

# Confirm the histogram's output by conducting a normality test
# To choose between unpaired t-test and Wilcoxon-Mann-Whitney test
normality = pingouin.normality(
    data=df,
    dv='age',
    group='trx',
    method='shapiro', # the default
    alpha=0.05) # 0.05 is also the default

# Select the age of the Drug group
age_trx = df.loc[df["trx"] == "Drug", "age"]

# Select the age of the Placebo group
age_placebo = df.loc[df["trx"] == "Placebo", "age"]

# Since the data distribution is not normal
# Conduct a two-sided Mann-Whitney U test
age_group_effects = pingouin.mwu(age_trx, age_placebo)

# Extract the p-value
age_group_effects_p_value = age_group_effects["p-val"]

print('two_sample_p_value', two_sample_p_value)
print('num_effects_p_value', num_effects_p_value)
print('normality', normality)
print('age_group_effects_p_value', age_group_effects_p_value)
